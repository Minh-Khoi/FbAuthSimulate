-- Create the 'users' table to store user credentials
CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    email TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL -- In a real application, this should be a securely hashed password
);

-- Create the 'refresh_tokens' table to store refresh tokens
CREATE TABLE refresh_tokens (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    token TEXT NOT NULL UNIQUE,
    expiry_date DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

-- Insert a sample user into the 'users' table
-- In a real application, the password would be hashed using a library like BCrypt.
INSERT INTO users (email, password) VALUES ('user@example.com', 'password');

-- Insert a sample refresh token for the user
-- The token and expiry date would be generated by your application.
INSERT INTO refresh_tokens (user_id, token, expiry_date) VALUES (1, 'sample-refresh-token', '2025-12-31 23:59:59');
